{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_app\\\\pokedex\\\\src\\\\Pokemon.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\nimport { toFirstCharUppercase } from \"./constants\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pokemon = props => {\n  _s();\n\n  const {\n    match,\n    history\n  } = props;\n  const {\n    params\n  } = match;\n  const {\n    pokemonId\n  } = params;\n  const [pokemon, setPokemon] = useState(undefined);\n  useEffect(() => {\n    axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`).then(function (response) {\n      const {\n        data\n      } = response;\n      setPokemon(data);\n    }).catch(function (error) {\n      setPokemon(false);\n    });\n  }, [pokemonId]);\n\n  const generatePokemonJSX = pokemon => {\n    const {\n      name,\n      id,\n      species,\n      height,\n      weight,\n      types,\n      sprites\n    } = pokemon;\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\n    const {\n      front_default\n    } = sprites;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h1   \",\n        children: [`${id}.`, \" \", toFirstCharUppercase(name), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: front_default\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: \"300px\",\n          height: \"300px\"\n        },\n        src: fullImageUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        children: \"Pokemon Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Species: \", /*#__PURE__*/_jsxDEV(Link, {\n          href: species.url,\n          children: [species.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Height: \", height, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: [\"Weight: \", weight, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \" Types:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), types.map(typeInfo => {\n        const {\n          type\n        } = typeInfo;\n        const {\n          name\n        } = type;\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\" \", `${name}`]\n        }, name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this);\n      })]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [pokemon === undefined && /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }, this), pokemon !== undefined && pokemon && generatePokemonJSX(pokemon), pokemon === false && /*#__PURE__*/_jsxDEV(Typography, {\n      children: \" Pokemon not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }, this), pokemon !== undefined && /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: () => history.push(\"/\"),\n      children: \"back to pokedex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Pokemon, \"5RlIBupmaXeLRXK3uCwYnX00xBs=\");\n\n_c = Pokemon;\nexport default Pokemon;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pokemon\");","map":{"version":3,"sources":["E:/react_app/pokedex/src/Pokemon.jsx"],"names":["React","useEffect","useState","Typography","Link","CircularProgress","Button","toFirstCharUppercase","axios","Pokemon","props","match","history","params","pokemonId","pokemon","setPokemon","undefined","get","then","response","data","catch","error","generatePokemonJSX","name","id","species","height","weight","types","sprites","fullImageUrl","front_default","width","url","map","typeInfo","type","push"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,gBAA3B,EAA6CC,MAA7C,QAA2D,mBAA3D;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBF,KAA3B;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAaF,KAAnB;AACA,QAAM;AAAEG,IAAAA;AAAF,MAAgBD,MAAtB;AACA,QAAM,CAACE,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAACe,SAAD,CAAtC;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,KAAK,CACFU,GADH,CACQ,qCAAoCJ,SAAU,GADtD,EAEGK,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,YAAM;AAAEC,QAAAA;AAAF,UAAWD,QAAjB;AACAJ,MAAAA,UAAU,CAACK,IAAD,CAAV;AACD,KALH,EAMGC,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBP,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KARH;AASD,GAVQ,EAUN,CAACF,SAAD,CAVM,CAAT;;AAYA,QAAMU,kBAAkB,GAAIT,OAAD,IAAa;AACtC,UAAM;AAAEU,MAAAA,IAAF;AAAQC,MAAAA,EAAR;AAAYC,MAAAA,OAAZ;AAAqBC,MAAAA,MAArB;AAA6BC,MAAAA,MAA7B;AAAqCC,MAAAA,KAArC;AAA4CC,MAAAA;AAA5C,QAAwDhB,OAA9D;AACA,UAAMiB,YAAY,GAAI,iDAAgDN,EAAG,MAAzE;AACA,UAAM;AAAEO,MAAAA;AAAF,QAAoBF,OAA1B;AACA,wBACE;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,OAApB;AAAA,mBACI,GAAEL,EAAG,GADT,OACcnB,oBAAoB,CAACkB,IAAD,CADlC,eAEE;AAAK,UAAA,GAAG,EAAEQ;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBN,UAAAA,MAAM,EAAE;AAA1B,SAAZ;AAAiD,QAAA,GAAG,EAAEI;AAAtD;AAAA;AAAA;AAAA;AAAA,cALF,eAME,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,UAAD;AAAA,mBACG,WADH,eAEE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEL,OAAO,CAACQ,GAApB;AAAA,qBAA0BR,OAAO,CAACF,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAWE,QAAC,UAAD;AAAA,+BAAqBG,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE,QAAC,UAAD;AAAA,+BAAqBC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAcGC,KAAK,CAACM,GAAN,CAAWC,QAAD,IAAc;AACvB,cAAM;AAAEC,UAAAA;AAAF,YAAWD,QAAjB;AACA,cAAM;AAAEZ,UAAAA;AAAF,YAAWa,IAAjB;AACA,4BAAO,QAAC,UAAD;AAAA,0BAA0B,GAAEb,IAAK,EAAjC;AAAA,WAAiBA,IAAjB;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAJA,CAdH;AAAA,oBADF;AAsBD,GA1BD;;AA4BA,sBACE;AAAA,eACGV,OAAO,KAAKE,SAAZ,iBAAyB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YAD5B,EAEGF,OAAO,KAAKE,SAAZ,IAAyBF,OAAzB,IAAoCS,kBAAkB,CAACT,OAAD,CAFzD,EAGGA,OAAO,KAAK,KAAZ,iBAAqB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHxB,EAKGA,OAAO,KAAKE,SAAZ,iBACC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,MAAML,OAAO,CAAC2B,IAAR,CAAa,GAAb,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA,kBADF;AAaD,CA3DD;;GAAM9B,O;;KAAAA,O;AA6DN,eAAeA,OAAf","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Typography, Link, CircularProgress, Button } from \"@material-ui/core\";\r\nimport { toFirstCharUppercase } from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nconst Pokemon = (props) => {\r\n  const { match, history } = props;\r\n  const { params } = match;\r\n  const { pokemonId } = params;\r\n  const [pokemon, setPokemon] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}/`)\r\n      .then(function (response) {\r\n        const { data } = response;\r\n        setPokemon(data);\r\n      })\r\n      .catch(function (error) {\r\n        setPokemon(false);\r\n      });\r\n  }, [pokemonId]);\r\n\r\n  const generatePokemonJSX = (pokemon) => {\r\n    const { name, id, species, height, weight, types, sprites } = pokemon;\r\n    const fullImageUrl = `https://pokeres.bastionbot.org/images/pokemon/${id}.png`;\r\n    const { front_default } = sprites;\r\n    return (\r\n      <>\r\n        <Typography variant=\"h1   \">\r\n          {`${id}.`} {toFirstCharUppercase(name)}\r\n          <img src={front_default} />\r\n        </Typography>\r\n        <img style={{ width: \"300px\", height: \"300px\" }} src={fullImageUrl} />\r\n        <Typography variant=\"h3\">Pokemon Info</Typography>\r\n        <Typography>\r\n          {\"Species: \"}\r\n          <Link href={species.url}>{species.name} </Link>\r\n        </Typography>\r\n        <Typography>Height: {height} </Typography>\r\n        <Typography>Weight: {weight} </Typography>\r\n        <Typography variant=\"h6\"> Types:</Typography>\r\n        {types.map((typeInfo) => {\r\n          const { type } = typeInfo;\r\n          const { name } = type;\r\n          return <Typography key={name}> {`${name}`}</Typography>;\r\n        })}\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {pokemon === undefined && <CircularProgress />}\r\n      {pokemon !== undefined && pokemon && generatePokemonJSX(pokemon)}\r\n      {pokemon === false && <Typography> Pokemon not found</Typography>}\r\n\r\n      {pokemon !== undefined && (\r\n        <Button variant=\"contained\" onClick={() => history.push(\"/\")}>\r\n          back to pokedex\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n"]},"metadata":{},"sourceType":"module"}